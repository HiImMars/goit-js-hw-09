{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAcC,SAASC,cAAc,SACrCC,EAAU,CACdC,SAAU,gBACVC,SAAU,OACVC,aAAc,OACdC,QAAS,IACTC,cAAc,EACdC,kBAAmB,eAKrB,SAASC,EAAcN,EAAUO,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAET,E,MAAUO,IAEpBG,EAAO,C,SAAEV,E,MAAUO,GAAQ,GAE5BA,EAAM,G,CAXbX,EAAYmB,iBAAiB,UAe7B,SAAmBC,GACjBA,EAAMC,iBAEN,MAAQV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cAAcC,SACpD,IAAIC,EAAeC,OAAON,EAAMO,OAC5BC,EAAcF,OAAOL,EAAKM,OAC1BE,EAAgBH,OAAOJ,EAAOK,OAC9BG,EAAW,GAEXR,GAAU,GAAKF,EAAQ,GAAKC,EAAO,IACrCU,EAAAnC,GAASoC,OAAOC,QAAQ,sCAG1B,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAeK,GAAK,EACvCJ,EAAWI,EAEX1B,EAAcsB,EAAUL,GACrBU,MAAK,EAACjC,SAAEA,EAAQO,MAAEA,KACjBsB,EAAAnC,GAASoC,OAAOI,QACd,uBAAqBlC,QAAiBO,MAAWR,KAElDoC,OAEF,EAAOnC,WAAUO,YAChBsB,EAAAnC,GAASoC,OAAOC,QACd,sBAAoB/B,QAAeO,MAAWR,EAC9C,IAGNwB,GAAgBG,EAElBV,EAAMK,cAAce,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst promiseForm = document.querySelector('.form');\nconst options = {\n  position: 'center-bottom',\n  distance: '15px',\n  borderRadius: '15px',\n  timeout: 8000,\n  clickToClose: true,\n  cssAnimationStyle: 'from-bottom',\n};\n\npromiseForm.addEventListener('submit', onPromise);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onPromise(event) {\n  event.preventDefault();\n  // console.log(event.currentTarget.elements.amount.value);\n  const { delay, step, amount } = event.currentTarget.elements;\n  let promiseDelay = Number(delay.value);\n  let promiseStep = Number(step.value);\n  let promiseAmount = Number(amount.value);\n  let position = 0;\n\n  if (amount <= 0 || delay < 0 || step < 0) {\n    Notiflix.Notify.failure(` Please input correct values (>=0)`);\n  }\n\n  for (let i = 0; i <= promiseAmount; i += 1) {\n    position = i;\n\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) =>\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          options\n        )\n      )\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          options\n        );\n      });\n    promiseDelay += promiseStep;\n  }\n  event.currentTarget.reset();\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$promiseForm","document","querySelector","$47d4ff9957288465$var$options","position","distance","borderRadius","timeout","clickToClose","cssAnimationStyle","$47d4ff9957288465$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","step","amount","currentTarget","elements","promiseDelay","Number","value","promiseStep","promiseAmount","position1","$parcel$interopDefault","Notify","failure","i","then","success","catch","reset"],"version":3,"file":"03-promises.fc38258c.js.map"}